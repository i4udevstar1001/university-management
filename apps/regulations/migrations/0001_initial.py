# Generated by Django 2.2 on 2020-01-24 11:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('teachers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AttendanceMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AttendancePlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=500)),
                ('longitude', models.DecimalField(decimal_places=10, max_digits=20)),
                ('latitude', models.DecimalField(decimal_places=10, max_digits=20)),
                ('radius', models.PositiveIntegerField(default=100)),
            ],
            options={
                'ordering': ('-updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttendanceRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('attendance_place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='regulations.AttendancePlace')),
                ('attendees', models.ManyToManyField(related_name='attendee_rules', through='regulations.AttendanceMembership', to='teachers.TeacherProfile')),
            ],
            options={
                'ordering': ('-updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open_time', models.TimeField()),
                ('start_open_time', models.TimeField()),
                ('finish_open_time', models.TimeField()),
                ('close_time', models.TimeField()),
                ('start_close_time', models.TimeField()),
                ('finish_close_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='UnAttendenceMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_on', models.DateTimeField(auto_now_add=True)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regulations.AttendanceRule')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachers.TeacherProfile')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('slots', models.ManyToManyField(to='regulations.TimeSlot')),
            ],
            options={
                'ordering': ('-updated',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='attendancerule',
            name='fri',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fris', to='regulations.AttendanceTime'),
        ),
        migrations.AddField(
            model_name='attendancerule',
            name='mon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mons', to='regulations.AttendanceTime'),
        ),
        migrations.AddField(
            model_name='attendancerule',
            name='nonattendees',
            field=models.ManyToManyField(related_name='nonattendee_rules', through='regulations.UnAttendenceMembership', to='teachers.TeacherProfile'),
        ),
        migrations.AddField(
            model_name='attendancerule',
            name='sat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sats', to='regulations.AttendanceTime'),
        ),
        migrations.AddField(
            model_name='attendancerule',
            name='sun',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='suns', to='regulations.AttendanceTime'),
        ),
        migrations.AddField(
            model_name='attendancerule',
            name='thr',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='thrs', to='regulations.AttendanceTime'),
        ),
        migrations.AddField(
            model_name='attendancerule',
            name='tue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tues', to='regulations.AttendanceTime'),
        ),
        migrations.AddField(
            model_name='attendancerule',
            name='wed',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='weds', to='regulations.AttendanceTime'),
        ),
        migrations.AddField(
            model_name='attendancemembership',
            name='rule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regulations.AttendanceRule'),
        ),
        migrations.AddField(
            model_name='attendancemembership',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teachers.TeacherProfile'),
        ),
        migrations.CreateModel(
            name='AttendanceHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_open_attend', models.BooleanField(default=True)),
                ('identified_on', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(upload_to='')),
                ('longitude', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('is_right_place', models.BooleanField(default=True)),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='regulations.AttendanceMembership')),
                ('time_slot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='regulations.TimeSlot')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_attendance_day', models.BooleanField(default=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('description', models.TextField()),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='regulations.AttendanceRule')),
            ],
        ),
    ]
